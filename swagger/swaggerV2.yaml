openapi: 3.0.0
info:
  title: Argent Bank API documentation
  description: Contains all available API endpoints in this codebase.
  version: '2.0.0'
  termsOfService: 'http://swagger.io/terms/'
servers:
  - url: http://localhost:3001/api/v2
paths:

  # == User Module

  /user/login:
    post:
      tags:
        - User Module
      summary: Login. ⚠ modified vs v1
      description: >
        API for Login. ⚠ for the version 2.0, the response's body contains
        also the userId, for more security and coherence of the endpoints path names.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Login Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Signup Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/{userId}/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The user's ID
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The user's ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: User profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  # == Transactions module

  /user/{userId}/accounts/month-summary:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions module
      summary: Summary of the user's accounts balances, for the current month
      description: >
        API for getting the summary of all the transactions of the current month,
        from all the user's accounts
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The user's ID
      responses:
        '200':
          description: User transactions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentMonthDashboard'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '404':
          description: Transactions not found
        '500':
          description: Internal Server Error

  /user/{userId}/accounts/{accountId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions module
      summary: List of the transactions for the targeted account, for the specified month and year
      description: >
        API for getting all the transactions of the specified month and year,
        from the user's targeted account. If no month and year are specified,
        return the transactions for the current month.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The user's ID
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
          description: The account's ID
        - name: month
          in: query
          required: false
          schema:
            type: integer
          description: The month of the requested transactions (if no value, return the current month)
        - name: year
          in: query
          required: false
          schema:
            type: integer
          description: The year of the requested transactions - required if month is defined (if no value, return the current year)
      responses:
        '200':
          description: Account transaction retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountMonthTransactions'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/{userId}/accounts/{accountId}/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions module
      summary: Transaction details
      description: API for getting the details of a transaction
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The user's ID
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
          description: The account's ID
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: The transaction's ID
      responses:
        '200':
          description: Transaction retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionObject'
        '400':
          description: Bad request
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

    patch:
      security:
        - Bearer: []
      tags:
        - Transactions module
      summary: Updating the infosAndNotes field in a targeted transaction
      description: API for updating a transaction's infosAndNotes field
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionUpdateinfosAndNotes'
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The user's ID
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
          description: The account's ID
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
          description: Transaction's ID
      responses:
        '200':
          description: Transaction updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionObject'
        '400':
          description: Bad request
        '500':
          description: Internal Server Error

components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - email
        - password
        - firstName
        - lastName
      properties:
        email:
          type: string
          description: user email
        password:
          type: string
          description: user password
        firstName:
          type: string
          description: user first name
        lastName:
          type: string
          description: user last name

    Login:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          description: user email
        password:
          type: string
          description: user password

    ApiResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          type: object
          properties:
            id:
              type: string
            email:
              type: string

    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT token
        userId:
          type: integer
          description: The bank internal ID of the user

    UserProfile:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        userId:
          type: integer

    CurrentMonthDashboard:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          type: array
          items:
            type: object
            properties:
              accountId:
                type: integer
                description: Id of the targeted account
              accountType:
                type: string
                description: Type of the account (Checking, Savings, Credit Card, etc.)
              balance:
                type: number
                description: Balance of the account

    AccountMonthTransactions:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          type: object
          properties:
            accountId:
              type: integer
              description: Id of the targeted account
            accountType:
              type: string
              description: Type of the account (Checking, Savings, Credit Card, etc.)
            month:
              type: integer
            year:
              type: integer
            previousBalance:
              type: number
              description: The previous balance of the account
            currentBalance:
              type: number
              description: The current balance of the account
            monthTransactions:
              type: array
              description: Array of the transactions of the account, for the current month
              items:
                $ref: '#/components/schemas/TransactionObject'

    TransactionObject:
      type: object
      properties:
        accountId:
          type: integer
          description: Id of the targeted account
        accountType:
          type: string
          description: Type of the account (Checking, Savings, Credit Card, etc.)
        date:
          type: string
          description: Date of the transaction
        withdrawal:
          type: number
          description: Amount of the withdrawal. If there is a withdrawal, the deposit must be 0.
        deposit:
          type: number
          description: Amount of the deposit. If there is a deposit, the withdrawal must be 0.
        balanceBefore:
          type: number
          description: Balance before the transaction
        balanceAfter:
          type: number
          description: Balance after the transaction
        infosAndNotes:
          type: string
          description: Infos and notes of the transaction

    TransactionUpdateinfosAndNotes:
      type: object
      properties:
        infosAndNotes:
          type: string
          description: Infos and notes of the transaction to be updated
